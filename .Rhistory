# proportion of the behaviour states during the observed period
table(BlacktipB_1min$state)/length(BlacktipB_1min$state)
BlacktipB_1min %>% mutate(day = day(Time)) %>%
ggplot(aes(Time,ODBA_avg)) +
#facet_wrap(~day,scales = "free_x") +
geom_line(alpha=.1) +
geom_point(aes(shape=state,color=state)) + ylab("ODBA (1-min average)")
set.seed(147)
fit1_s2 <- fitHMM(BlacktipBData,
nbState = 2,
stateNames = stateNames,
dist=list(ODBA_avg="gamma"),
Par0 = list(ODBA_avg=c(mu0,sigma0)),
retryFits=10)
fit1_s2
sigma0 = c(2,2)
set.seed(147)
fit1_s2 <- fitHMM(BlacktipBData,
nbState = 2,
stateNames = stateNames,
dist=list(ODBA_avg="gamma"),
Par0 = list(ODBA_avg=c(mu0,sigma0)),
retryFits=10)
fit1_s2
# formula corresponding to the regression coefficients for the transition probabilities
# re-prep data
BlacktipB_1min <- BlacktipB_1min %>%
mutate(lag = 0:(n() - 1),
sin_part = sin(2*pi*lag*(1/60)/24),
cos_part = cos(2*pi*lag*(1/60)/24)
)
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL, covNames = c("sin_part", "cos_part"))
formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
fit1 = fitHMM(BlacktipBData,
nbStates=2,
dist=list(ODBA_avg="gamma"),
#estAngleMean = list(temp_avg=FALSE),
Par0 = list(ODBA_avg=c(mu0
,sd0
)))
formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
fit2 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = Par0_fit2$Par,formula=formula)
fit2
plot(fit2,breaks=80)
plotPR(fit2)
AIC(fit1)
AIC(fit2)
fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2
fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2
pgamma(.03,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2)
pgamma(.03,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T)
pgamma(.001,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T)
pgamma(.1,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T)
pgamma(1,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T)
pgamma(10,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T)
pgamma(11,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T)
pgamma(11,fit1$mle$ODBA_avg[1,2]^2/fit1$mle$ODBA_avg[2,2]^2,fit1$mle$ODBA_avg[1,2]/fit1$mle$ODBA_avg[2,2]^2,log.p = T)
pgamma(11,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T)
pgamma(11,fit1$mle$ODBA_avg[1,2]^2/fit1$mle$ODBA_avg[2,2]^2,fit1$mle$ODBA_avg[1,2]/fit1$mle$ODBA_avg[2,2]^2,log.p = T)
pgamma(1,fit1$mle$ODBA_avg[1,2]^2/fit1$mle$ODBA_avg[2,2]^2,fit1$mle$ODBA_avg[1,2]/fit1$mle$ODBA_avg[2,2]^2,log.p = T)
pgamma(11,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T)
fit1$mle$ODBA_avg[1,2]^2/fit1$mle$ODBA_avg[2,2]^2
fit1$mle$ODBA_avg[1,2]/fit1$mle$ODBA_avg[2,2]^2
BlacktipBData$ODBA_avg
fit1$mle$ODBA_avg[1,1]
pgamma(BlacktipBData$ODBA_avg/100,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T)
pgamma(BlacktipBData$ODBA_avg,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T)
hist(pgamma(BlacktipBData$ODBA_avg,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T))
hist(pgamma(BlacktipBData$ODBA_avg/100,fit1$mle$ODBA_avg[1,1]^2/fit1$mle$ODBA_avg[2,1]^2,fit1$mle$ODBA_avg[1,1]/fit1$mle$ODBA_avg[2,1]^2,log.p = T))
fit1
fit1$mle
fit1$mod$minimum
fit1
fit1$mod
fit1$mod$minimum
as.numeric(fit1$mod$minimum)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(message = FALSE)
as.numeric(fit1$mod$minimum)
as.numeric(fit1$mod$minimum)
as.numeric(fit1$mod$minimum) > 0
fit1
# R packages that will be used for this tutorial
library(readr)
library(momentuHMM)
library(ggplot2)
library(dplyr)
library(lubridate)
# Load data
BlacktipB <- read_delim("BlacktipB.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB_aux = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) #%>%
BlacktipB_aux %>%
ggplot(aes(Time,ODBA)) +
geom_line() + geom_hline(yintercept = 2,linetype="dashed",color="red")
# Transform into proper time format and take 1-min avg
BlacktipB_1min = BlacktipB %>% filter(ODBA <= 2) %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
group_by(Time = cut(Time, breaks = "1 min")) %>%
summarise(ODBA_avg = mean(ODBA),
temp_avg = mean(Temp),
depth_avg = mean(Depth)) %>%
ungroup() %>%
mutate(Time = as.POSIXct(Time,format = "%Y-%m-%d %H:%M:%S")) %>%
as.data.frame()
mu0 = c(5,9)/100
sd0 = c(2,2)/100
fit1 = fitHMM(BlacktipBData,
nbStates=2,
dist=list(ODBA_avg="gamma"),
#estAngleMean = list(temp_avg=FALSE),
Par0 = list(ODBA_avg=c(mu0
,sd0
)))
fit1
mu0
sd0
BlacktipBData
head(BlacktipBData)
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL)
head(BlacktipBData)
fit1 = fitHMM(BlacktipBData,
nbStates=2,
dist=list(ODBA_avg="gamma"),
#estAngleMean = list(temp_avg=FALSE),
Par0 = list(ODBA_avg=c(mu0
,sd0
)))
fit1
as.numeric(fit1$mod$minimum)
fit1
fit1$mod
AIC(fit1)
fit1_s2$mod$minimum
fit2$mod$minimum
fit2$mod$estimate
AIC(fit1)
fit1$mod$minimum
2*7-2*fit1$mod$minimum
11*2+2*14493.14
# Load data
BlacktipB <- read_delim("BlacktipB.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB_aux = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) #%>%
BlacktipB_aux %>%
ggplot(aes(Time,ODBA)) +
geom_line() + geom_hline(yintercept = 2,linetype="dashed",color="red")
# Transform into proper time format and take 1-min avg
BlacktipB_1min = BlacktipB %>% filter(ODBA <= 2) %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
group_by(Time = cut(Time, breaks = "1 min")) %>%
summarise(ODBA_avg = mean(ODBA),
temp_avg = mean(Temp),
depth_avg = mean(Depth)) %>%
ungroup() %>%
mutate(Time = as.POSIXct(Time,format = "%Y-%m-%d %H:%M:%S")) %>%
as.data.frame()
head(BlacktipB_1min)
BlacktipB_1min$ODBA_avg = BlacktipB_1min$ODBA_avg*100
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL)
head(BlacktipBData)
c=100
mu0 = c(5,9)*c
sd0 = c(2,2)*c
c=100
mu0 = c(.05,.09)*c
sd0 = c(.02,.02)*c
sigma0 = c(.02,.02)*c
fit1 = fitHMM(BlacktipBData,
nbStates=2,
dist=list(ODBA_avg="gamma"),
#estAngleMean = list(temp_avg=FALSE),
Par0 = list(ODBA_avg=c(mu0
,sd0
)))
fit1
# formula corresponding to the regression coefficients for the transition probabilities
# re-prep data
BlacktipB_1min <- BlacktipB_1min %>%
mutate(lag = 0:(n() - 1),
sin_part = sin(2*pi*lag*(1/60)/24),
cos_part = cos(2*pi*lag*(1/60)/24)
)
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL, covNames = c("sin_part", "cos_part"))
# re-fit model 1
fit1 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = list(ODBA_avg=c(.1,.3,1,1)))
fit1
formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
fit2 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = Par0_fit2$Par,formula=formula)
fit2
AIC(fit1)
AIC(fit2)
# Transform into proper time format and take 1-min avg
BlacktipB_1min = BlacktipB %>% filter(ODBA <= 2) %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
group_by(Time = cut(Time, breaks = "1 min")) %>%
summarise(ODBA_avg = mean(ODBA),
temp_avg = mean(Temp),
depth_avg = mean(Depth)) %>%
ungroup() %>%
mutate(Time = as.POSIXct(Time,format = "%Y-%m-%d %H:%M:%S")) %>%
as.data.frame()
c=1
BlacktipB_1min$ODBA_avg = BlacktipB_1min$ODBA_avg*c
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL)
head(BlacktipBData)
mu0 = c(.05,.09)*c
sd0 = c(.02,.02)*c
sigma0 = c(.02,.02)*c
fit1 = fitHMM(BlacktipBData,
nbStates=2,
dist=list(ODBA_avg="gamma"),
#estAngleMean = list(temp_avg=FALSE),
Par0 = list(ODBA_avg=c(mu0
,sd0
)))
fit1
# formula corresponding to the regression coefficients for the transition probabilities
# re-prep data
BlacktipB_1min <- BlacktipB_1min %>%
mutate(lag = 0:(n() - 1),
sin_part = sin(2*pi*lag*(1/60)/24),
cos_part = cos(2*pi*lag*(1/60)/24)
)
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL, covNames = c("sin_part", "cos_part"))
# re-fit model 1
fit1 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = list(ODBA_avg=c(.1,.3,1,1)))
formula = ~ sin_part + cos_part
fit1
formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
fit2 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = Par0_fit2$Par,formula=formula)
fit2
AIC(fit1)
AIC(fit2)
fit1$data
fit1$mle
fit1$CIreal
fit1$mod
fit1$conditions
fit1$rawCovs
fit1$conditions
AIC(fit1)
AIC(fit2)
fit1
# Transform into proper time format and take 1-min avg
BlacktipB_1min = BlacktipB %>% filter(ODBA <= 2) %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
group_by(Time = cut(Time, breaks = "1 min")) %>%
summarise(ODBA_avg = mean(ODBA),
temp_avg = mean(Temp),
depth_avg = mean(Depth)) %>%
ungroup() %>%
mutate(Time = as.POSIXct(Time,format = "%Y-%m-%d %H:%M:%S")) %>%
as.data.frame()
c=100
BlacktipB_1min$ODBA_avg = BlacktipB_1min$ODBA_avg*c
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL)
head(BlacktipBData)
mu0 = c(.05,.09)*c
sd0 = c(.02,.02)*c
sigma0 = c(.02,.02)*c
fit1 = fitHMM(BlacktipBData,
nbStates=2,
dist=list(ODBA_avg="gamma"),
#estAngleMean = list(temp_avg=FALSE),
Par0 = list(ODBA_avg=c(mu0
,sd0
)))
fit1
as.numeric(fit1$mod$minimum)
# formula corresponding to the regression coefficients for the transition probabilities
# re-prep data
BlacktipB_1min <- BlacktipB_1min %>%
mutate(lag = 0:(n() - 1),
sin_part = sin(2*pi*lag*(1/60)/24),
cos_part = cos(2*pi*lag*(1/60)/24)
)
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL, covNames = c("sin_part", "cos_part"))
# re-fit model 1
fit1 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = list(ODBA_avg=c(.1,.3,1,1)))
formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
fit2 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = Par0_fit2$Par,formula=formula)
fit2
fit2$mod$minimum
AIC(fit1)
AIC(fit2)
head(BlacktipBData)
head(BlacktipB_1min)
BlacktipB %>% filter(ODBA <= 2) %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
group_by(Time = cut(Time, breaks = "1 min"))
BlacktipB_1min
head(BlacktipB_1min)
glimpse(BlacktipB_1min)
BlacktipB_1min %>%
mutate(min_day = as.POSIXct(Time,format = "%H:%M")) #%>%
BlacktipB_1min %>%
mutate(min_day = m(format(Time,format = "%H:%M"))) #%>%
library(lubridate)
BlacktipB_1min %>%
mutate(min_day = m(format(Time,format = "%H:%M"))) #%>%
BlacktipB_1min %>%
mutate(min_day = minutes(format(Time,format = "%H:%M"))) #%>%
BlacktipB_1min %>%
mutate(min_day = minutes(as.POSIXct(Time,format = "%H:%M"))) #%>%
BlacktipB_1min %>%
mutate(min_day = (as.POSIXct(Time,format = "%H:%M"))) #%>%
BlacktipB_1min %>%
mutate(min_day = hm(as.POSIXct(Time,format = "%H:%M"))) #%>%
BlacktipB_1min %>%
mutate(min_day = hm(format(Time,format = "%H:%M"))) #%>%
BlacktipB_1min %>%
mutate(min_day = m(format(Time,format = "%H:%M"))) #%>%
BlacktipB_1min %>%
mutate(min_day = minutes(hm(format(Time,format = "%H:%M"))))#%>%
BlacktipB_1min %>%
mutate(min_day = minutes(hm(format(Time,format = "%H:%M"))))
BlacktipB_1min = BlacktipB_1min %>%
mutate(min_day = minutes(hm(format(Time,format = "%H:%M"))))
glimpse(BlacktipB_1min)
formula = ~ cosinor(hour_to_sec, period = 60*24)
#formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL, covNames = c("min_day"))
formula = ~ cosinor(hour_to_sec, period = 60*24)
#formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
formula = ~ cosinor(min_day, period = 60*24)
#formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
# re-fit model 1
fit1 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = list(ODBA_avg=c(.1,.3,1,1)))
fit1
formula = ~ cosinor(min_day, period = 60*24)
#formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
BlacktipB_1min = BlacktipB_1min %>%
mutate(min_day = as.integer(minutes(hm(format(Time,format = "%H:%M")))))
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL, covNames = c("min_day"))
# re-fit model 1
fit1 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = list(ODBA_avg=c(.1,.3,1,1)))
formula = ~ cosinor(min_day, period = 60*24)
#formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
fit2 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = Par0_fit2$Par,formula=formula)
fit2
plot(fit2)
formula = ~ cosinor(min_day, period = 1440)
#formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
fit2 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = Par0_fit2$Par,formula=formula)
fit2
plot(fit2)
# Load data
BlacktipB <- read_delim("BlacktipB.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB_aux = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) #%>%
BlacktipB_aux %>%
ggplot(aes(Time,ODBA)) +
geom_line() + geom_hline(yintercept = 2,linetype="dashed",color="red")
# Transform into proper time format and take 1-min avg
BlacktipB_1min = BlacktipB %>% filter(ODBA <= 2) %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
group_by(Time = cut(Time, breaks = "1 min")) %>%
summarise(ODBA_avg = mean(ODBA),
temp_avg = mean(Temp),
depth_avg = mean(Depth)) %>%
ungroup() %>%
mutate(Time = as.POSIXct(Time,format = "%Y-%m-%d %H:%M:%S")) %>%
as.data.frame()
c=100
BlacktipB_1min$ODBA_avg = BlacktipB_1min$ODBA_avg*c
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL)
mu0 = c(.05,.09)*c
sd0 = c(.02,.02)*c
sigma0 = c(.02,.02)*c
fit1 = fitHMM(BlacktipBData,
nbStates=2,
dist=list(ODBA_avg="gamma"),
#estAngleMean = list(temp_avg=FALSE),
Par0 = list(ODBA_avg=c(mu0
,sd0
)))
fit1
BlacktipB_1min = BlacktipB_1min %>%
mutate(min_day = as.integer(minutes(hm(format(Time,format = "%H:%M")))))
BlacktipB_1min
BlacktipB_1min = BlacktipB_1min %>%
mutate(min_day = (minutes(hm(format(Time,format = "%H:%M")))))
BlacktipB_1min
BlacktipB_1min = BlacktipB_1min %>%
mutate(min_day = (minute(hm(format(Time,format = "%H:%M")))))
glimpse(BlacktipB_1min)
BlacktipB_1min = BlacktipB_1min %>%
mutate(min_day = (minutes(hm(format(Time,format = "%H:%M")))))
BlacktipB_1min$min_day
BlacktipB_1min$min_day[1]
class(BlacktipB_1min$min_day[1])
BlacktipB_1min = BlacktipB_1min %>%
# mutate(min_day = (minutes(hm(format(Time,format = "%H:%M")))))
mutate(min_day = time_length(hm(format(Time,format = "%H:%M")),unit = "minutes"))
BlacktipB_1min
glimpse(BlacktipB_1min)
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL, covNames = c("min_day"))
# re-fit model 1
fit1 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = list(ODBA_avg=c(.1,.3,1,1)))
formula = ~ cosinor(min_day, period = 1440)
#formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
fit2 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = Par0_fit2$Par,formula=formula)
fit2
plot(fit2)
BlacktipB_1min = BlacktipB_1min %>%
# mutate(min_day = (minutes(hm(format(Time,format = "%H:%M")))))
mutate(min_day = as.integer(time_length(hm(format(Time,format = "%H:%M")),unit = "minutes")))
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL, covNames = c("min_day"))
# re-fit model 1
fit1 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = list(ODBA_avg=c(.1,.3,1,1)))
formula = ~ cosinor(min_day, period = 1440)
#formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
fit2 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = Par0_fit2$Par,formula=formula)
fit2
plot(fit2)
# R packages that will be used for this tutorial
library(readr)
library(momentuHMM)
library(ggplot2)
library(dplyr)
library(lubridate)
# Load data
BlacktipB <- read_delim("BlacktipB.txt",
delim = "\t", escape_double = FALSE,
trim_ws = TRUE)
BlacktipB_aux = BlacktipB %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) #%>%
# Transform into proper time format and take 1-min avg
BlacktipB_1min = BlacktipB %>% filter(ODBA <= 2) %>%
mutate(Time = as.POSIXct(Time,format = "%m/%d/%Y %H:%M")) %>%
group_by(Time = cut(Time, breaks = "1 min")) %>%
summarise(ODBA_avg = mean(ODBA),
temp_avg = mean(Temp),
depth_avg = mean(Depth)) %>%
ungroup() %>%
mutate(Time = as.POSIXct(Time,format = "%Y-%m-%d %H:%M:%S")) %>%
as.data.frame()
c=100
BlacktipB_1min$ODBA_avg = BlacktipB_1min$ODBA_avg*c
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL)
mu0 = c(.05,.09)*c
sd0 = c(.02,.02)*c
sigma0 = c(.02,.02)*c
fit1 = fitHMM(BlacktipBData,
nbStates=2,
dist=list(ODBA_avg="gamma"),
#estAngleMean = list(temp_avg=FALSE),
Par0 = list(ODBA_avg=c(mu0
,sd0
)))
fit1
fit1$mle$beta
fit1$mle$delta
fit1$mle$gamma
BlacktipB_1min = BlacktipB_1min %>%
# mutate(min_day = (minutes(hm(format(Time,format = "%H:%M")))))
mutate(min_day = as.integer(time_length(hm(format(Time,format = "%H:%M")),unit = "minutes")))
BlacktipBData = prepData(BlacktipB_1min,coordNames = NULL, covNames = c("min_day"))
# re-fit model 1
fit1 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = list(ODBA_avg=c(.1,.3,1,1)))
formula = ~ cosinor(min_day, period = 1440)
#formula = ~ sin_part + cos_part
Par0_fit2 <- getPar0(model=fit1,
formula=formula)
fit2 = fitHMM(BlacktipBData,nbStates=2,dist=list(ODBA_avg="gamma"),Par0 = Par0_fit2$Par,formula=formula)
fit2$mle$beta
fit2$mod$minimum
fit2$mod$estimate
fit2$mle$delta
fit2$mle$beta
head(BlacktipB)
is.na(BlacktipB)
sum(is.na(BlacktipB))
library(missMDA)
library(visdat)
visdat::vis_miss(BlacktipB)
visdat::vis_miss(BlacktipB,warn_large_data = F)
